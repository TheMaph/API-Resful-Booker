{
	"info": {
		"_postman_id": "7a190bab-6067-4fbd-8dbd-4ca2e1f22638",
		"name": "RESTFUL-BOOKER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25732159"
	},
	"item": [
		{
			"name": "CreateToken",
			"item": [
				{
					"name": "Response token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Body contains a token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"    pm.expect(typeof pm.response.json().token).to.eql('string')\r",
									"});\r",
									"const token = pm.response.json().token\r",
									"pm.environment.set('token',token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE}}/auth",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Response a reason",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"bodys response provides a reason for not taking the token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"reason\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admins\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE}}/auth",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CreateBooking",
			"item": [
				{
					"name": "CreatingABooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and have a body\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.be.withBody\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set('bookingid',jsonData.bookingid)\r",
									"pm.test(\"response has a Bookingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('bookingid');\r",
									"    pm.expect(typeof jsonData.bookingid).to.eql('number')\r",
									"});\r",
									"\r",
									"pm.test('validate data', function() {\r",
									"    pm.expect(typeof jsonData.booking.firstname).to.eql('string')\r",
									"    pm.expect(typeof jsonData.booking.lastname).to.eql('string')\r",
									"    pm.expect(typeof jsonData.booking.totalprice).to.eql('number')\r",
									"    pm.expect(typeof jsonData.booking.depositpaid).to.eql('boolean')\r",
									"    pm.expect(typeof jsonData.booking.bookingdates.checkin).to.eql('string')\r",
									"    pm.expect(typeof jsonData.booking.bookingdates.checkout).to.eql('string')\r",
									"    pm.expect(typeof jsonData.booking.additionalneeds).to.eql('string')\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Maria\",\r\n    \"lastname\" : \"Postman\",\r\n    \"totalprice\" : 255,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2023-04-01\",\r\n        \"checkout\" : \"2024-04-01\"\r\n    },\r\n    \"additionalneeds\" : \"Lunch\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE}}/booking",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Status body error\", function () {\r",
									"    pm.expect(pm.response.text()).to.equal(\"Internal Server Error\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : 12312,\r\n    \"lastname\" : \"Postman\",\r\n    \"totalprice\" : 255,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2023-04-01\",\r\n        \"checkout\" : \"2024-04-01\"\r\n    },\r\n    \"additionalneeds\" : \"Lunch\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE}}/booking",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GetBooking",
			"item": [
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"bookingid should be a number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(typeof jsonData[0].bookingid).to.eql('number');\r",
									"});\r",
									"const id = pm.environment.get('bookingid')\r",
									"pm.test(\"Body have a new id created\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"bookingid\":'+id);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE}}/booking",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request an id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate an id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstname).to.eql('Maria');\r",
									"    pm.expect(jsonData.lastname).to.eql('Postman');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_BASE}}/booking/{{bookingid}}",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateBooking",
			"item": [
				{
					"name": "Update a Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cookie is present\", function () {\r",
									"    pm.request.to.have.header(\"Cookie\");\r",
									"    pm.request.to.have.header(\"Accept\");\r",
									"    pm.request.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate post\", function () {\r",
									"    var requestBody = pm.request.body.raw;\r",
									"    var responseBody = pm.response.text();\r",
									"    pm.expect(requestBody).to.eql(responseBody)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "token={{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Cookie",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstname\":\"Maria\",\"lastname\":\"Postman\",\"totalprice\":350,\"depositpaid\":true,\"bookingdates\":{\"checkin\":\"2023-04-01\",\"checkout\":\"2024-04-01\"},\"additionalneeds\":\"Lunch\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_BASE}}/booking/{{bookingid}}",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteBooking",
			"item": [
				{
					"name": "Delete a booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "token={{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Cookie",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{API_BASE}}/booking/{{bookingid}}",
							"host": [
								"{{API_BASE}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}